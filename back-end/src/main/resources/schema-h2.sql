-- Personal Finance Tracker — Schema aligned to latest requirements
-- Users, Categories (with is_income), Budgets (single category), Transactions
-- Save as: src/main/resources/schema-h2.sql

CREATE SCHEMA IF NOT EXISTS dbo;

-- --- Clean up previous objects (safe if first run) ---
DROP TABLE IF EXISTS dbo.transactions;
DROP TABLE IF EXISTS dbo.budgets;
DROP TABLE IF EXISTS dbo.budget_categories;
DROP TABLE IF EXISTS dbo.categories;
DROP TABLE IF EXISTS dbo.accounts; -- no longer used

-- =========================
-- USERS
-- =========================
CREATE TABLE IF NOT EXISTS dbo.users (
  user_id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username      VARCHAR(100)  NOT NULL UNIQUE,
  password_hash VARCHAR(60)   NOT NULL,  -- BCrypt hash
  created_at    TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- =========================
-- CATEGORIES (global list)
-- =========================
CREATE TABLE IF NOT EXISTS dbo.categories (
  category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR(100) NOT NULL UNIQUE,
  is_income   BOOLEAN      NOT NULL  -- TRUE = income, FALSE = outcome
);

-- Seed categories translated from screenshot
INSERT INTO dbo.categories (name, is_income) VALUES
  ('External income', TRUE),         -- Wpływy zewnętrzne
  ('Internal income', TRUE),         -- Wpływy wewnętrzne
  ('Uncategorized', FALSE),          -- Bez kategorii
  ('Current expenses', FALSE),       -- Wydatki bieżące
  ('Entertainment & leisure', FALSE),-- Rozrywka i wypoczynek
  ('Transport', FALSE),              -- Transport
  ('Bills', FALSE),                  -- Rachunki
  ('Clothing & accessories', FALSE), -- Odzież i dodatki
  ('Home', FALSE),                   -- Dom
  ('Health', FALSE),                 -- Zdrowie
  ('Education', FALSE),              -- Edukacja
  ('For others / Gifts', FALSE),     -- Dla innych
  ('Taxes & fees', FALSE),           -- Podatki i opłaty
  ('Children', FALSE),               -- Dzieci
  ('Other expenses', FALSE),         -- Wydatki inne
  ('Internal charges', FALSE);       -- Obciążenia wewnętrzne

-- =========================
-- BUDGETS (each budget is for one category)
-- =========================
CREATE TABLE IF NOT EXISTS dbo.budgets (
  budget_id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id      INT           NOT NULL,
  category_id  INT           NOT NULL,
  start_date   DATE          NOT NULL,
  end_date     DATE          NOT NULL,
  limit_amount DECIMAL(18,2) NOT NULL,
  CONSTRAINT fk_budgets_user
    FOREIGN KEY (user_id)     REFERENCES dbo.users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_budgets_category
    FOREIGN KEY (category_id) REFERENCES dbo.categories(category_id) ON DELETE RESTRICT
);
CREATE INDEX IF NOT EXISTS ix_budgets_user_category ON dbo.budgets(user_id, category_id);

-- =========================
-- TRANSACTIONS (share same categories)
-- =========================
CREATE TABLE IF NOT EXISTS dbo.transactions (
  transaction_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id        INT           NOT NULL,
  category_id    INT           NOT NULL,
  amount         DECIMAL(18,2) NOT NULL,
  txn_type       VARCHAR(10)   NOT NULL,  -- 'INCOME' or 'EXPENSE'
  txn_date       DATE          NOT NULL,
  description    VARCHAR(500),
  created_at     TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_tx_user     FOREIGN KEY (user_id)     REFERENCES dbo.users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_tx_category FOREIGN KEY (category_id) REFERENCES dbo.categories(category_id),
  CONSTRAINT ck_tx_type     CHECK (txn_type IN ('INCOME','EXPENSE'))
);
CREATE INDEX IF NOT EXISTS ix_tx_user_date     ON dbo.transactions(user_id, txn_date);
CREATE INDEX IF NOT EXISTS ix_tx_category_date ON dbo.transactions(category_id, txn_date);
